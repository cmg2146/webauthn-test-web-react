server {
    listen              80;
    listen              [::]:80;
    server_name         localhost;
    return              302 https://localhost$request_uri;
}

server {
    listen              443 ssl;
    listen              [::]:443 ssl;
    server_name         localhost;

    ssl_certificate     /etc/ssl/dev-server.pem;
    ssl_certificate_key /etc/ssl/dev-server.key;
    ssl_protocols       TLSv1.2 TLSv1.3;

    # dont use strict transport security for development. If ports are being reused on
    # localhost then browser cache will need to be cleared to get other, non-https
    # projects to work in dev.
    #add_header Strict-Transport-Security  'max-age=15552000; includeSubDomains';

    add_header Referrer-Policy            'no-referrer';
    add_header X-Content-Type-Options     'nosniff';
    add_header Content-Security-Policy    "frame-ancestors 'none'; frame-src 'none'";
    add_header X-Frame-Options            'DENY';

    #access_log  /var/log/nginx/host.access.log  main;

    location /api/ {
        proxy_pass          ${API_URL}/;
        proxy_set_header    Host $proxy_host;
    }

    location / {
        proxy_pass          ${WEB_URL}/;
        proxy_set_header    Host $proxy_host;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
